<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Caleb Mullan's Site</title><link>//bemuseed.github.io/</link><description>Recent content on Caleb Mullan's Site</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Feb 2023 10:42:09 +0000</lastBuildDate><atom:link href="//bemuseed.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>A guide to flattening and unflattening Pytorch models</title><link>//bemuseed.github.io/posts/flattening-unflattening-stable-diffusion-models/flattening-unflattening-stable-diffusion-models.html</link><pubDate>Fri, 03 Feb 2023 10:42:09 +0000</pubDate><guid>//bemuseed.github.io/posts/flattening-unflattening-stable-diffusion-models/flattening-unflattening-stable-diffusion-models.html</guid><description>Introduction A Pytorch model, like any neural net, is essentially a series of floating point numbers. These are contained within tensors, a form of array, and most models exist as a list of tensors of varying shapes, sizes, and dimensions. This makes mathematical operations on these numbers more difficult, like calculating an average model or performing mutations using techniques like Principal Component Analysis.
In this guide, you&amp;rsquo;ll be shown how to convert a PyTorch model into a one-dimensional array of floating point numbers, and back again, in the following process:</description></item><item><title>My First Post</title><link>//bemuseed.github.io/posts/my-first-post.html</link><pubDate>Wed, 01 Feb 2023 23:54:31 +0000</pubDate><guid>//bemuseed.github.io/posts/my-first-post.html</guid><description>My first post!</description></item></channel></rss>